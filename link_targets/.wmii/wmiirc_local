#!/bin/dash -f

MODKEY=Mod4

noticetimeout=60

WMII_NORMCOLORS='#888888 #222222 #333333'
WMII_FOCUSCOLORS='#ffffff #285577 #4c7899'
WMII_FOCUSURGENTCOLORS='#000000 #dd8000 #ffffff'
WMII_URGENTCOLORS='#bbbbbb #b95000 #333333'

WMII_BACKGROUND='#333333'
WMII_FONT='fixed'

WMII_TERM=uxterm

#cat stdin. If no lines print $1 instead
replace_empty_string() {
	awk -ve=$1 '{print} END{if(!NR)print e}'
}

#List of tags. If parameter given only tags regex matching apply
tag_list() {
	wmiir ls /tag|awk -vr=$1 '($0!="sel/")&&($0~r) {sub(/[/]/,""); print}'
}

#Ripped from suckless.org
#Requires list of tags on stdin
next_tag() {
	awk -vcurtag=$(wmiir read /tag/sel/ctl | sed 1q) '
		NR==1 {ret=$0;}
		$0==curtag { if(getline) ret=$0; exit }
		END {print ret}'
}

selected_tag() {
	wmiir read /ctl|awk '/^view /{gsub("^view ", "");print $0}'
}

# Status Bar Info
status() {
	status_colour="colors $WMII_NORMCOLORS"
	if test -f '/sys/class/power_supply/BAT0/status'
	then
		state=`cat /sys/class/power_supply/BAT0/status`
		if test -f '/sys/class/power_supply/BAT0/energy_now'
		then
			energy_now=`cat /sys/class/power_supply/BAT0/energy_now`
			energy_full=`cat /sys/class/power_supply/BAT0/energy_full`
		else
			energy_now=`cat /sys/class/power_supply/BAT0/charge_now`
			energy_full=`cat /sys/class/power_supply/BAT0/charge_full`
		fi
		bat_level=`expr $energy_now "*" 100 "/" $energy_full`
		test "$bat_level" -lt "25" && status_colour='colors #CCCCCC #880000 #333333'
		status_bat="| $state [$bat_level%]"
	else
		status_bat=""
	fi
	echo "$status_colour"
	echo -n label `uptime | sed 's/.*://; s/,//g'` '|' \
		`date '+%a %F %T'` "$status_bat"
}

is_urgent() {
	wmiir cat "/tag/$1/ctl"|awk '/^urgent on$/{e=1} END{exit !e}';
}

startup() {
	witray -N -V &
}

wi_events <<'!'
Event FocusTag
	if is_urgent "$@"; then
		wmiir xwrite "/lbar/$@" colors "$WMII_FOCUSURGENTCOLORS"
	else
		wmiir xwrite "/lbar/$@" colors "$WMII_FOCUSCOLORS"
	fi
Event UnfocusTag
	if is_urgent "$@"; then
		wmiir xwrite "/lbar/$@" colors "$WMII_URGENTCOLORS"
	else
		wmiir xwrite "/lbar/$@" colors "$WMII_NORMCOLORS"
	fi
Event UrgentTag #Technically we probably should scan for active tags at wmii startup
	shift
	wmiir xwrite "/lbar/$@" label "*$@"
	if [ "$@" = "$(selected_tag)" ]; then
		wmiir xwrite "/lbar/$@" colors "$WMII_FOCUSURGENTCOLORS"
	else
		wmiir xwrite "/lbar/$@" colors "$WMII_URGENTCOLORS"
	fi
Event NotUrgentTag
	shift
	wmiir xwrite "/lbar/$@" label "$@"
	if [ "$@" = "$(selected_tag)" ]; then
		wmiir xwrite "/lbar/$@" colors "$WMII_FOCUSCOLORS"
	else
		wmiir xwrite "/lbar/$@" colors "$WMII_NORMCOLORS"
	fi
Key $MODKEY-bracketleft
	wmiir xwrite /ctl view `tag_list | tac | next_tag`
Key $MODKEY-bracketright
	wmiir xwrite /ctl view `tag_list | next_tag`
Menu Client-3-Kill
	xmessage -print Are you sure? -buttons Yes:0,No:1 -timeout 15 -default No && wmiir xwrite /client/$1/ctl slay
!

for i in 0 1 2 3 4 5 6 7 8 9; do
	wi_events <<!
Key $MODKEY-$i		 # Cycle through tags beginning with number
	wmiir xwrite /ctl view \`tag_list "^$i"|replace_empty_string $i|next_tag\`
Key $MODKEY-Shift-$i     # Retag selected client with the numbered tag  (or tag beginning with number if exists)
	wmiir xwrite /client/sel/tags \`tag_list "^$i"|replace_empty_string $i|next_tag\`
Key XF86AudioRaiseVolume
	amixer set Master 5%+
Key XF86AudioLowerVolume
	amixer set Master 5%-
Key XF86AudioMute
	amixer set Master toggle
!
done

